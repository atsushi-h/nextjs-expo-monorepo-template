name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          # secretsを使用してGITHUB_TOKENを参照
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          additional_permissions: |
            actions: read
          
          # デバッグ用に一時的に全許可
          allowed_tools: |
            Bash(npm install),
            Bash(npm run build),
            Bash(npm run test:*),
            Bash(npm run lint:*),
            Bash(pnpm install),
            Bash(pnpm run build),
            Bash(pnpm run test:*),
            Bash(pnpm run lint:*),
            Bash(pnpm fix),
            Bash(pnpm check),
            Bash(pnpm check-types),
            Bash(gh pr create:*),
            Bash(gh pr list),
            Bash(gh pr view:*),
            Bash(git checkout:*),
            Bash(git branch:*),
            Bash(git add:*),
            Bash(git commit:*),
            Bash(git push:*),
            Bash(git pull),
            Bash(git status),
            Bash(git diff:*),
            Bash(git log:*)
          
          custom_instructions: |
            Follow our coding standards in CLAUDE.md
            Ensure all new code has tests
            Use TypeScript for new files
            When creating PRs, always include:
            - Clear title and description
            - Summary of changes
            - Test results
            Use Conventional Commits for commit messages
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

