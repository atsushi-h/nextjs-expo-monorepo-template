name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read
    steps:
      - name: Debug - Print environment
        run: |
          echo "=== GitHub Context ==="
          echo "GitHub Token present: ${{ env.GITHUB_TOKEN != '' }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Debug - Check gh CLI
        run: |
          echo "=== GH CLI Status ==="
          which gh || echo "gh not found"
          gh --version || echo "gh version failed"
          echo "GH_TOKEN present: ${GH_TOKEN:+true}"
          gh auth status || echo "gh auth status failed"

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          GH_TOKEN: ${{ github.token }}
          ACTIONS_STEP_DEBUG: true  # Enable debug logging
          ACTIONS_RUNNER_DEBUG: true # Enable runner debug logging
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          additional_permissions: |
            actions: read
          
          # Very permissive for debugging - REVERT AFTER FIXING
          allowed_tools: |
            Bash(*),
            Edit,
            Read,
            Write,
            mcp__github__create_pull_request,
            mcp__github__update_pull_request
          
          custom_instructions: |
            DEBUGGING MODE ENABLED
            
            Before attempting to create a PR, please run these debug commands:
            1. echo "Current directory: $(pwd)"
            2. echo "Git status:" && git status
            3. echo "GH auth check:" && gh auth status
            4. echo "GH token present: ${GH_TOKEN:+true}"
            5. echo "Attempting simple gh command:" && gh pr list --limit 1
            
            Then proceed with PR creation.
            
            Follow detailed guidelines in CLAUDE.md for PR creation.
            CRITICAL: Always use `gh pr create` command to create actual PRs.